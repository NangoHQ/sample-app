generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Table for your own users
model Users {
  id String @id @default(uuid()) @db.Uuid

  email       String
  displayName String

  connectionId String?

  connections UserConnections[]

  @@unique([email])
}

// multiple conections per user
model UserConnections {
  id String @id @default(uuid()) @db.Uuid
  
  userId String @db.Uuid
  connectionId String
  providerConfigKey String
  
  createdAt DateTime @default(now()) @db.Timestamp(3)
  updatedAt DateTime @updatedAt
  
  user Users @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, providerConfigKey])
  @@index([connectionId])
}

// This is the records that Nango is creating
model Contacts {
  id String @id @db.VarChar(64)

  integrationId String
  connectionId  String
  fullName      String
  avatar        String

  createdAt DateTime? @db.Timestamp(3)
  updatedAt DateTime  @updatedAt

  deletedAt DateTime? @db.Timestamp(3)

  @@index([integrationId])
}

// Table for Google Drive files
model Files {
  id String @id @db.VarChar(64)

  title        String
  mimeType     String
  url          String
  size         Int?
  driveId      String? // for one-drive
  createdTime  DateTime @db.Timestamp(3)

  integrationId String
  connectionId  String

  createdAt DateTime  @default(now()) @db.Timestamp(3)
  updatedAt DateTime  @updatedAt
  deletedAt DateTime? @db.Timestamp(3)

  @@index([integrationId])
  @@index([connectionId])
}
