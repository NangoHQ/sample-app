[
  {
    "providerConfigKey": "slack",
    "actions": [
      {
        "type": "action",
        "description": "An action that sends a message to a slack channel.",
        "endpoint": {
          "method": "POST",
          "path": "/send-message"
        },
        "input": "ActionInput_slack_sendmessage",
        "name": "send-message",
        "output": [
          "ActionOutput_slack_sendmessage"
        ],
        "scopes": [
          "chat:write"
        ],
        "usedModels": [
          "ActionInput_slack_sendmessage",
          "ActionOutput_slack_sendmessage"
        ],
        "version": "0.0.1"
      }
    ],
    "syncs": [
      {
        "type": "sync",
        "description": "Syncs information about all Users on the Slack workspace",
        "auto_start": true,
        "endpoints": [
          {
            "method": "GET",
            "path": "/users"
          }
        ],
        "input": "SyncMetadata_slack_users",
        "name": "users",
        "output": [
          "SlackUser"
        ],
        "runs": "every hour",
        "scopes": [
          "users:read",
          "users:read.email"
        ],
        "sync_type": "full",
        "track_deletes": false,
        "usedModels": [
          "SlackUser",
          "SyncMetadata_slack_users"
        ],
        "version": "0.0.1",
        "webhookSubscriptions": []
      }
    ],
    "onEventScripts": {
      "post-connection-creation": [],
      "pre-connection-deletion": [],
      "validate-connection": []
    }
  },
  {
    "providerConfigKey": "google-drive",
    "actions": [
      {
        "type": "action",
        "description": "Fetches the content of a file given its ID, processes the data using\na response stream, and encodes it into a base64 string. This base64-encoded\nstring can be used to recreate the file in its original format using an external tool.\nIf this is a native google file type then use the fetch-google-sheet or fetch-google-doc\nactions.",
        "endpoint": {
          "method": "GET",
          "path": "/fetch-document",
          "group": "Documents"
        },
        "input": "ActionInput_google_drive_fetchdocument",
        "name": "fetch-document",
        "output": [
          "ActionOutput_google_drive_fetchdocument"
        ],
        "scopes": [
          "https://www.googleapis.com/auth/drive.readonly"
        ],
        "usedModels": [
          "ActionInput_google_drive_fetchdocument",
          "ActionOutput_google_drive_fetchdocument"
        ],
        "version": "2.0.2"
      }
    ],
    "syncs": [
      {
        "type": "sync",
        "description": "Sync the metadata of a specified file or folders from Google Drive,\nhandling both individual files and nested folders.\nMetadata required to filter on a particular folder, or file(s). Metadata\nfields should be `{\"files\": [\"<some-id>\"]}` OR\n`{\"folders\": [\"<some-id>\"]}`. The ID should be able to be provided\nby using the Google Picker API\n(https://developers.google.com/drive/picker/guides/overview)\nand using the ID field provided by the response\n(https://developers.google.com/drive/picker/reference/results)",
        "auto_start": false,
        "endpoints": [
          {
            "method": "GET",
            "path": "/documents",
            "group": "Documents"
          }
        ],
        "input": "SyncMetadata_google_drive_documents",
        "name": "documents",
        "output": [
          "Document"
        ],
        "runs": "every day",
        "scopes": [
          "https://www.googleapis.com/auth/drive.readonly"
        ],
        "sync_type": "full",
        "track_deletes": true,
        "usedModels": [
          "Document",
          "SyncMetadata_google_drive_documents"
        ],
        "version": "3.0.1",
        "webhookSubscriptions": []
      }
    ],
    "onEventScripts": {
      "post-connection-creation": [],
      "pre-connection-deletion": [],
      "validate-connection": []
    }
  },
  {
    "providerConfigKey": "one-drive",
    "actions": [
      {
        "type": "action",
        "description": "This action will be used to fetch the latest file download_url which can be used to download the actual file.",
        "endpoint": {
          "method": "GET",
          "path": "/fetch-file",
          "group": "Files"
        },
        "input": "ActionInput_one_drive_fetchfile",
        "name": "fetch-file",
        "output": [
          "ActionOutput_one_drive_fetchfile"
        ],
        "scopes": [
          "Files.Read",
          "offline_access"
        ],
        "usedModels": [
          "ActionInput_one_drive_fetchfile",
          "ActionOutput_one_drive_fetchfile"
        ],
        "version": "2.0.0"
      }
    ],
    "syncs": [
      {
        "type": "sync",
        "description": "Fetch selected files from a user's OneDrive based on provided metadata.",
        "auto_start": false,
        "endpoints": [
          {
            "method": "GET",
            "path": "/user-files/selected",
            "group": "Files"
          }
        ],
        "input": "SyncMetadata_one_drive_userfilesselection",
        "name": "user-files-selection",
        "output": [
          "OneDriveFileSelection"
        ],
        "runs": "every hour",
        "scopes": [
          "Files.Read",
          "Files.Read.All",
          "offline_access"
        ],
        "sync_type": "full",
        "track_deletes": false,
        "usedModels": [
          "OneDriveFileSelection",
          "SyncMetadata_one_drive_userfilesselection"
        ],
        "version": "1.0.1",
        "webhookSubscriptions": []
      }
    ],
    "onEventScripts": {
      "post-connection-creation": [],
      "pre-connection-deletion": [],
      "validate-connection": []
    }
  }
]